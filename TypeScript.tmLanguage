<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>fileTypes</key>
    <array>
      <string>ts</string>
    </array>
    <key>name</key>
    <string>TypeScript</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#shebang</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#expression</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>block</key>
      <dict>
        <key>name</key>
        <string>block.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block-braces-curly</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block-braces-round</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block-braces-square</string>
          </dict>
        </array>
      </dict>
      <key>block-braces-curly</key>
      <dict>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.expression.braces.curly</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>block-braces-round</key>
      <dict>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.expression.braces.round</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>block-braces-square</key>
      <dict>
        <key>begin</key>
        <string>\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.expression.braces.square</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>class-expression</key>
      <dict>
        <key>begin</key>
        <string>\b(class|interface)\b(?:\s+([a-zA-Z_$][\w$]*))?</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.class.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\})</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.class.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-class-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>name</key>
        <string>comment.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment-block-doc</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment-block-html</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment-line</string>
          </dict>
        </array>
      </dict>
      <key>comment-block</key>
      <dict>
        <key>begin</key>
        <string>/\*</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\*/</string>
        <key>name</key>
        <string>comment.block.ts</string>
      </dict>
      <key>comment-block-doc</key>
      <dict>
        <key>begin</key>
        <string>/\*\*(?!/)</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\*/</string>
        <key>name</key>
        <string>comment.block.documentation.ts</string>
      </dict>
      <key>comment-block-html</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.html.js</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.html.js</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(&lt;!--|--&gt;)</string>
        <key>name</key>
        <string>comment.block.html.js</string>
      </dict>
      <key>comment-line</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.ts</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(//).*$\n?</string>
        <key>name</key>
        <string>comment.line.double-slash.ts</string>
      </dict>
      <key>expression</key>
      <dict>
        <key>comment</key>
        <string>The main building block</string>
        <key>name</key>
        <string>meta.expression.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#module-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regexp</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#misc-higlighting</string>
          </dict>
        </array>
      </dict>
      <key>function</key>
      <dict>
        <key>name</key>
        <string>meta.function.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#meta-function-assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function-assignment-quoted</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function</string>
          </dict>
        </array>
      </dict>
      <key>meta-class-body</key>
      <dict>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\})</string>
        <key>endCaptures</key>
        <dict/>
        <key>name</key>
        <string>meta.expression.body.class</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-storage-modifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-class-member-attribute</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-class-member-method</string>
          </dict>
        </array>
      </dict>
      <key>meta-class-member-attribute</key>
      <dict>
        <key>begin</key>
        <string>\b([a-zA-Z_$][\w$]*)\s*(\?\s*)?(?=(=|:))</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.toc-list.class.member.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.ts</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#meta-variable-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-variable-initializer</string>
          </dict>
        </array>
      </dict>
      <key>meta-class-member-method</key>
      <dict>
        <key>begin</key>
        <string>\b(?:(get|set)\s+)?([a-zA-Z_$][\w$]*)\s*\??\s*(?=\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.property.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\})|(;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.class.member.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#misc-higlighting</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function-body</string>
          </dict>
        </array>
      </dict>
      <key>meta-function</key>
      <dict>
        <key>begin</key>
        <string>\b(function)(?:\s+([a-zA-Z_$][\w$]*))?\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.function.ts</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.function.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\})|(;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-function-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#misc-higlighting</string>
          </dict>
        </array>
      </dict>
      <key>meta-function-assignment</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.ts</string>
          </dict>
        </dict>
        <key>match</key>
        <string>\b([a-zA-Z_$][\w$]*)\s*(?:(=)|:)\s*(?=(\bfunction\b))</string>
      </dict>
      <key>meta-function-assignment-quoted</key>
      <dict>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>string.quoted.single.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ts</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.ts</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ts</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>string.quoted.double.ts</string>
          </dict>
          <key>6</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ts</string>
          </dict>
          <key>7</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.ts</string>
          </dict>
          <key>8</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ts</string>
          </dict>
        </dict>
        <key>match</key>
        <string>(?:((')([^']*)('))|((")([^"]+)(")))\s*:\s*(?=\bfunction\b)</string>
      </dict>
      <key>meta-function-body</key>
      <dict>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\})</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.expression.body.function</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>meta-function-parameters</key>
      <dict>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.expression.body.class</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-storage-modifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[a-zA-Z_$][\w$]*</string>
            <key>name</key>
            <string>variable.parameter.function.ts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-variable-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-variable-initializer</string>
          </dict>
        </array>
      </dict>
      <key>meta-storage-modifier</key>
      <dict>
        <key>match</key>
        <string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\b</string>
        <key>name</key>
        <string>storage.modifier.ts</string>
      </dict>
      <key>meta-variable-initializer</key>
      <dict>
        <key>begin</key>
        <string>(=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[,);=])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>meta-variable-type</key>
      <dict>
        <key>begin</key>
        <string>:</string>
        <key>end</key>
        <string>(?=[,);=])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>misc-higlighting</key>
      <dict>
        <key>comment</key>
        <string>This patterns are not affecting scope rules and are usefull for higlighting purposes only</string>
        <key>name</key>
        <string>misc.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.new.ts</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.ts</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(new)\s+(\w+(?:\.[\w$]*)*)</string>
            <key>name</key>
            <string>meta.class.instance.constructor</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.object.ts.firebug</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.function.ts.firebug</string>
              </dict>
            </dict>
            <key>match</key>
            <string>\b(console)\.(warn|info|log|error|time|timeEnd|assert)\b</string>
            <key>name</key>
            <string>meta.object.ts.firebug</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(console)\b</string>
            <key>name</key>
            <string>entity.name.type.object.ts.firebug</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
            <key>name</key>
            <string>constant.numeric.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|number|short|string|var|void)\b</string>
            <key>name</key>
            <string>storage.type.ts</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-storage-modifier</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(break|case|catch|continue|declare|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\b</string>
            <key>name</key>
            <string>keyword.control.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(delete|in|instanceof|new|typeof|with)\b</string>
            <key>name</key>
            <string>keyword.operator.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\btrue\b</string>
            <key>name</key>
            <string>constant.language.boolean.true.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\bfalse\b</string>
            <key>name</key>
            <string>constant.language.boolean.false.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\bnull\b</string>
            <key>name</key>
            <string>constant.language.null.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(super|this)\b</string>
            <key>name</key>
            <string>support.constant.ts</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.method.period.ts</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.constant.ts</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(\.)(prototype|__proto__)\b</string>
            <key>name</key>
            <string>meta.prototype.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(debugger)\b</string>
            <key>name</key>
            <string>keyword.other.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(require|module\.exports|module\.id|exports)\b</string>
            <key>name</key>
            <string>support.function.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>!|\$|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
            <key>name</key>
            <string>keyword.operator.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(Infinity|NaN|undefined)\b</string>
            <key>name</key>
            <string>constant.language.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\;</string>
            <key>name</key>
            <string>punctuation.terminator.statement.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>,[ |\t]*</string>
            <key>name</key>
            <string>meta.delimiter.object.comma.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\.</string>
            <key>name</key>
            <string>meta.delimiter.method.period.ts</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\[|\]</string>
            <key>name</key>
            <string>meta.brace.square.ts</string>
          </dict>
        </array>
      </dict>
      <key>module-expression</key>
      <dict>
        <key>begin</key>
        <string>\b(module)\b(?:\s+([a-zA-Z_$][\w$]*))?</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.module.ts</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.module.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\})</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>meta.module.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>regexp</key>
      <dict>
        <key>begin</key>
        <string>(?&lt;=[=(:]|^|return|&amp;&amp;|\|\||!)\s*(/)(?![/*+{}?])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(/)[igm]*</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.regexp.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\.</string>
            <key>name</key>
            <string>constant.character.escape.ts</string>
          </dict>
        </array>
      </dict>
      <key>shebang</key>
      <dict>
        <key>comment</key>
        <string>node.js shebang</string>
        <key>match</key>
        <string>^#![\S]+ node</string>
        <key>name</key>
        <string>comment.line.ts</string>
      </dict>
      <key>string</key>
      <dict>
        <key>name</key>
        <string>string.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-quoted-single</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-quoted-double</string>
          </dict>
        </array>
      </dict>
      <key>string-quoted-double</key>
      <dict>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
            <key>name</key>
            <string>constant.character.escape.ts</string>
          </dict>
        </array>
      </dict>
      <key>string-quoted-single</key>
      <dict>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.ts</string>
          </dict>
        </dict>
        <key>end</key>
        <string>'</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.ts</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.single.ts</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
            <key>name</key>
            <string>constant.character.escape.ts</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>scopeName</key>
    <string>source.ts</string>
    <key>uuid</key>
    <string>6bca3b85-82b7-4828-9573-8b91192dffe6</string>
  </dict>
</plist>
